#!/usr/bin/env ruby
###############################################################################
# * ========================== GPL License =====================================
# * This program is free software; you can redistribute it and/or modify
# * it under the terms of the GNU General Public License as published by
# * the Free Software Foundation; either version 2 of the License, or
# * (at your option) any later version.
# *
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# * GNU Library General Public License for more details.
# *
# * You should have received a copy of the GNU General Public License
# * along with this program; if not, write to the Free Software
# * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
# * ============================================================================
###############################################################################
#
# Author: Emiliano Castagnari (<ecastag@gmail.com>)
#
###############################################################################
#
# TODO / FIXME:
# - try / except for dns not responding
# - expect SOA.serial

STATE = {
	:ok        => 0,
	:warning   => 1,
	:critical  => 2,
	:unknown   => 3,
	:dependent => 4
}

JSON_OPTS='./check_dns.json'

###############################################################################

require 'rubygems'
require 'dnsruby'

$: << File.expand_path('./lib')

require 'getoptions'

###############################################################################

# If averything goes ok, return STATE[:ok]
state = STATE[:ok]

args = GetOpts.parse(ARGV, JSON_OPTS)

# Verify that a domain name has been provided through -d / --domain
if ! args[:domain]
	print " An FQDN is expected to be verified\n"
	exit STATE[:unknown]
end
domain = args[:domain]

# Verify that namerservers are present -n / --nameservers
if ! args[:dns]
	print " You must specify one or more nameservers (comma separated)\n"
	exit STATE[:unknown]
end
nameservers = args[:dns].split(',')

msg = {}

nameservers.each do |ns|
	Dnsruby::DNS.open(config_info = { :nameserver => ns } ) { |dns|
		dns.each_resource(domain, 'SOA', ) { |rr| 
			print "SOA \t#{rr}\n"                  if args[:verbose]
			print "serial \t#{ns}\t#{rr.serial}\n" if args[:verbose]
			print "auth   \t#{ns}\t#{rr.mname}\n"  if args[:verbose]
			if(args[:serial] != nil)
				if(args[:serial].to_s == rr.serial.to_s)
					state   = STATE[:ok]
					msg[ns] = "serial OK"
				else
					state   = STATE[:warning]
					msg[ns] = "serial FAIL"
				end
			end
			if(args[:authority] != nil)
				if(args[:authority].to_s == rr.mname.to_s)
					state   = STATE[:ok]
					msg[ns] = msg[ns].empty?() ? "auth OK" : "#{msg[ns]}|auth OK" 
				else
					state = STATE[:warning]
					msg[ns] = msg[ns].empty?() ? "auth FAIL" : "#{msg[ns]}|auth FAIL" 
				end
			end
		}
	}
end

output = ""
msg.each { |k,v| output = "#{output}#{k}: #{v}\n" }
print output
exit state
